# Travis build configuration, more or less copied from the one
# described at https://github.com/hvr/multi-ghc-travis/ .

# The following enables several GHC versions to be tested; often it's enough to test only against the last release in a major GHC version. Feel free to omit lines listings versions you don't need/want testing for.
env:
 - CABALVER=1.18 GHCVER=7.8.1  # see note about Alex/Happy for GHC >= 7.8
 - CABALVER=1.18 GHCVER=7.8.2
 - CABALVER=1.18 GHCVER=7.8.3
 - CABALVER=1.22 GHCVER=7.10.1
 - CABALVER=head GHCVER=head   # see section about GHC HEAD snapshots

# Note: the distinction between `before_install` and `install` is not important.
before_install:
 - git submodule update --init
 - travis_retry sudo add-apt-repository -y ppa:hvr/ghc
 - travis_retry sudo apt-get update
 - travis_retry sudo apt-get install cabal-install-$CABALVER ghc-$GHCVER # see note about happy/alex
 - export PATH=/opt/ghc/$GHCVER/bin:/opt/cabal/$CABALVER/bin:$PATH

install:
 - cabal --version
 - echo "$(ghc --version) [$(ghc --print-project-git-commit-id 2> /dev/null || echo '?')]"
 - travis_retry cabal update
 - cabal install -j ./lvars/haskell/par-classes/ ./lvars/haskell/par-collections/ ./lvars/haskell/par-transformers/ happy alex
 - cabal install --only-dependencies --enable-tests --enable-benchmarks ./lvars/haskell/lvish/

# Here starts the actual work to be performed for the package under test; any command which exits with a non-zero exit code causes the build to fail.
script:
 - VERSIONS=" ./1.1.4 ./2.0 ";
   for path in $VERSIONS; do
    cd ./$path;
    cabal configure --enable-tests -v2;
    cabal build;
    cabal test;
    cabal sdist;
   done;
